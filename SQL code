CREATE DATABASE DE_CAPSTONE_PROJECT

ALTER TABLE SALARIES
ALTER COLUMN SALARY FLOAT


SELECT E.emp_no,E.first_name,E.last_name,E.birth_date,E.sex,E.emp_title_id,T.title,S.salary,
   DE.dept_no,D.dept_name,E.hire_date,E.no_of_projects,
     E.Last_performance_rating,E.[left],E.last_date INTO FINAL_TB FROM employees AS E
 JOIN dept_emp AS DE
ON E.emp_no=DE.emp_no
 JOIN departments AS D
ON DE.dept_no=D.dept_no
 JOIN salaries AS S
ON S.emp_no=E.emp_no
 JOIN titles AS T
ON T.title_id=E.emp_title_id


SELECT COUNT(emp_no) FROM final_table where no_of_departments>1 


SELECT x.emp_no,first_name,last_name,birth_date,sex,emp_title_id,title,salary,
     no_of_departments,dept_nos,dept_names,hire_date, no_of_projects,Last_performance_rating,
    [left],last_date into final_table
FROM (
    SELECT 
        emp_no,first_name,last_name,birth_date,sex,emp_title_id,title,salary,
        dept_no,hire_date,no_of_projects,Last_performance_rating,[left],last_date,
        COUNT(*) OVER (PARTITION BY emp_no) AS no_of_departments,
        ROW_NUMBER() OVER (PARTITION BY emp_no ORDER BY emp_no) AS rn
    FROM FINAL_TB
) AS x
JOIN (
    SELECT 
        emp_no, 
        STRING_AGG(dept_name, ', ') AS dept_names,
		STRING_AGG(dept_no, ', ') AS dept_nos
    FROM FINAL_TB
    GROUP BY emp_no
) AS y ON x.emp_no = y.emp_no
WHERE x.rn = 1


SELECT MAX(last_date) as max_last,Min(last_date) as min_last
,MAX(hire_date) as max_hire,Min(hire_date) as min_hire FROM final_table






--------------------------------------**-------------------------------------------------------

--Exploratory Data Analysis(EDA)

--Q1.A list showing employee number, last name, first name, sex, and salary for each employee

SELECT emp_no,first_name,last_name,sex,salary
      FROM final_table

--Q2.A list showing first name, last name, and hire date for employees who were hired in 1986

SELECT first_name,last_name,hire_date FROM final_table WHERE YEAR(hire_date)=1986

/* Q3.A list showing the manager of each department with the following information:
     department number, department name, 
    the manager's employee number, last name, first name */


SELECT dept_no,dept_name,emp_no,first_name,LAST_NAME FROM FINAL_TB WHERE title='MANAGER'

/* Q4.A list showing the department of each employee with the following information:
      employee number, last name, first name, and department name */

SELECT emp_no,last_name,first_name,dept_names FROM FINAL_TABLE


/* Q5. A list showing first name, last name, and sex for employees whose first name
      is "Hercules" and last names begin with "Bâ€œ */

SELECT first_name,E.last_name,E.sex FROM employees E
   WHERE first_name='Hercules' AND last_name LIKE 'B%'

/* Q6.A list showing all employees in the Sales department, including their employee number,
     last name, first name, and department name.*/

SELECT emp_no,last_name,first_name,dept_name FROM FINAL_TB
WHERE dept_name='Sales'


/* Q7.A list showing all employees in the Sales and Development departments, 
     including their employee number, last name, first name, and department name.*/

SELECT emp_no,last_name,first_name,dept_name FROM FINAL_TB 
WHERE dept_name in ('Sales','development')

SELECT emp_no,last_name,first_name,dept_nameS FROM final_table
WHERE dept_nameS in ('Sales','development')

/*Q8. A list showing the frequency count of employee last names, in descending order.
       ( i.e., how many employees share each last name */

SELECT last_name,COUNT(LAST_NAME) AS FREQUENCY
FROM final_table
GROUP BY last_name
ORDER BY FREQUENCY DESC

--Q10.Show the Average salary per title (designation)

SELECT title,AVG(SALARY) AS AVG_SAL FROM final_table
GROUP BY TITLE
ORDER BY AVG_SAL DESC

--Q11.Calculate employee tenure & show the tenure distribution among the employees

select emp_no,DATEDIFF(year,hire_date,ISNULL(last_date,getdate()))as tenure from final_table



--High level metrics

select count(distinct dept_no)  from departments

select count(distinct title) from final_table

select count(emp_no) from final_table

select count(emp_no) from final_table where [left]=1

select count(distinct Last_performance_rating) from final_table

select count(emp_no) from final_table where no_of_departments>1

select avg(salary) from final_table

select count(distinct emp_no) from final_tb where title='manager'

select dept_no, COUNT(dept_no) from dept_manager group by dept_no having COUNT(dept_no)>1

select dept_name, COUNT(emp_no) as total_emp from FINAL_TB 
group by dept_name order by total_emp desc 



-----------------------------------------------------**-------------------------------------------------

--1. Employee Attrition Analysis

select *,(no_of_emp*100.00)/SUM(no_of_emp)over() as percntg from(
select 'emp_left' as emp_status,COUNT(*) as no_of_emp from final_table where [left]=1
union
select 'emp_stayed' as emp_status,COUNT(*) as no_of_emp from final_table where [left]=0
) as x

--2. Attrition by Gender

select *,(total_no*100.00)/SUM(total_no)over() as percntg from(
select 'Female' as gender,COUNT(*) as total_no from final_table where sex='F' and [left]=1
union 
select 'Male' as gender,COUNT(*) as total_no from final_table where sex='M'  and [left]=1) as x 

--3. Attrition by Department

select *,total_no*100.00/SUM(total_no)over() as pct from(
select dept_name,COUNT(*) as total_no
from FINAL_TB where [left]=1 group by dept_name) as x order by total_no desc

--4. Attrition by Job Title

select *,total_no*100.00/SUM(total_no)over() as pct from(
select title,COUNT(*) as total_no
from final_table where [left]=1 group by title) as x order by total_no desc

--5. Attrition by Salary Range

SELECT *,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table where [left]=1
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X
ORDER BY
    salary_range


--6. Attrition by Performance Rating

select *,total_no*100.00/SUM(total_no)over() as pct from(
select LAST_PERFORMANCE_RATING,COUNT(*) as total_no
from FINAL_TB where [left]=1 group by LAST_PERFORMANCE_RATING) as x order by total_no desc

--7. Attrition by Tenure

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END AS tenure_group,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT 
    emp_no,
    DATEDIFF(day, hire_date, ISNULL(last_date, GETDATE())) / 365.0 AS tenure
FROM 
    final_table
WHERE 
    [LEFT] = 1) AS X
GROUP BY  CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END
	) AS Y



	
--8. Attrition by Age Group

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,DATEDIFF(day,birth_date,last_date)/365.0 AS AGE 
   FROM final_table WHERE [LEFT]=1) AS X
GROUP BY  CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y


--9. Attrition by Number of Projects

SELECT *,total_projects*100.00/SUM(total_projects)OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,sum(no_of_projects) as total_projects
FROM final_table
 where [left]=1
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X
ORDER BY
   total_projects desc

 

--10. Employees with Highest  and lowest Salaries

select top 10 emp_no,CONCAT(first_name,' ',last_name) as emp_name,title,salary from final_table
order by salary desc

select top 10 emp_no,CONCAT(first_name,' ',last_name) as emp_name,title,salary from final_table
order by salary asc

--11. Performance Rating vs. Salary

--A. Average Salary by Performance Rating

SELECT last_performance_rating, 
       AVG(salary) AS avg_salary, 
       MIN(salary) AS min_salary, 
       MAX(salary) AS max_salary, 
       COUNT(*) AS employee_count
FROM final_table
GROUP BY last_performance_rating
ORDER BY last_performance_rating

--12. Employee Count by Department

select dept_name,COUNT(*) as total_emp from FINAL_TB group by dept_name order by total_emp desc

--13. Employee Count by Job Title

select title,COUNT(*) as total_emp from final_table group by title order by total_emp desc

--14. Average Salary by Job Title

select title,avg(salary) as avg_sal from final_table group by title order by avg_sal desc

--15. Employees Hire Trends

SELECT YEAR(hire_date) AS hire_year, COUNT(*) AS employee_count
FROM final_table
GROUP BY YEAR(hire_date)
ORDER BY hire_year

--16. Employee Exit Trends 

SELECT YEAR(last_date) AS exit_year, COUNT(emp_no) AS total_exits
FROM final_table
WHERE last_date IS NOT NULL
GROUP BY YEAR(last_date)
order by  exit_year

--17. Salary Growth Over Time

SELECT YEAR(hire_date) AS hire_year, 
       AVG(salary) AS avg_salary
FROM final_table
GROUP BY YEAR(hire_date)
ORDER BY hire_year



--18. Distribution of Employees by Gender

select *,total_no*100.00/SUM(total_no)over() as pct from(
select 'Female' as gender,COUNT(*) as total_no from final_table where sex='F' 
union 
select 'Male' as gender,COUNT(*) as total_no from final_table where sex='M' ) as x 


--Employee with No. of projects

SELECT *,total_projects*100.00/SUM(total_projects)OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,sum(no_of_projects) as total_projects
FROM final_table
 
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X
ORDER BY
   total_projects desc

--Employee by age group

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,DATEDIFF(day,birth_date,last_date)/365.0 AS AGE 
   FROM final_table ) AS X
GROUP BY  CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y

--Employees by salary range

SELECT *,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table 
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X
ORDER BY
    salary_range

--Department wise Employee

select distinct dept_name, COUNT(emp_no) as total_emp from FINAL_TB
group by dept_name order by total_emp desc

--Department wise average salary

select distinct dept_name, AVG(salary) as avg_salary from FINAL_TB
group by dept_name order by avg_salary desc


--Department wise no_of manager

select distinct dept_name, COUNT(emp_no) as total_manager from FINAL_TB where title='manager'
group by dept_name order by total_manager desc

--Department wise performance analysis

select dept_name,Last_performance_rating,COUNT(distinct emp_no)
from FINAL_TB
group by dept_name,Last_performance_rating

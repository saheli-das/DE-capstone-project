CREATE DATABASE DE_CAPSTONE_PROJECT

ALTER TABLE SALARIES
ALTER COLUMN SALARY FLOAT


SELECT E.emp_no,E.first_name,E.last_name,E.birth_date,E.sex,E.emp_title_id,T.title,S.salary,
   DE.dept_no,D.dept_name,E.hire_date,E.no_of_projects,
     E.Last_performance_rating,E.[left],E.last_date INTO FINAL_TB FROM employees AS E
 JOIN dept_emp AS DE
ON E.emp_no=DE.emp_no
 JOIN departments AS D
ON DE.dept_no=D.dept_no
 JOIN salaries AS S
ON S.emp_no=E.emp_no
 JOIN titles AS T
ON T.title_id=E.emp_title_id


SELECT Top 5 * FROM FINAL_Table 


SELECT x.emp_no,first_name,last_name,birth_date,sex,emp_title_id,title,salary,
     no_of_departments,dept_nos,dept_names,hire_date, no_of_projects,Last_performance_rating,
    [left],last_date into final_table
FROM (
    SELECT 
        emp_no,first_name,last_name,birth_date,sex,emp_title_id,title,salary,
        dept_no,hire_date,no_of_projects,Last_performance_rating,[left],last_date,
        COUNT(*) OVER (PARTITION BY emp_no) AS no_of_departments,
        ROW_NUMBER() OVER (PARTITION BY emp_no ORDER BY emp_no) AS rn
    FROM FINAL_TB
) AS x
JOIN (
    SELECT 
        emp_no, 
        STRING_AGG(dept_name, ', ') AS dept_names,
		STRING_AGG(dept_no, ', ') AS dept_nos
    FROM FINAL_TB
    GROUP BY emp_no
) AS y ON x.emp_no = y.emp_no
WHERE x.rn = 1


SELECT MAX(last_date) as max_last,Min(last_date) as min_last
,MAX(hire_date) as max_hire,Min(hire_date) as min_hire FROM final_table







--------------------------------------**-------------------------------------------------------

--Exploratory Data Analysis(EDA)

--Q1.A list showing employee number, last name, first name, sex, and salary for each employee

SELECT emp_no,first_name,last_name,sex,salary
      FROM final_table

--Q2.A list showing first name, last name, and hire date for employees who were hired in 1986

SELECT first_name,last_name,hire_date FROM final_table WHERE YEAR(hire_date)=1986

/* Q3.A list showing the manager of each department with the following information:
     department number, department name, 
    the manager's employee number, last name, first name */


SELECT dept_no,dept_name,emp_no,first_name,LAST_NAME FROM FINAL_TB WHERE title='MANAGER'

/* Q4.A list showing the department of each employee with the following information:
      employee number, last name, first name, and department name */

SELECT emp_no,last_name,first_name,dept_names FROM FINAL_TABLE


/* Q5. A list showing first name, last name, and sex for employees whose first name
      is "Hercules" and last names begin with "Bâ€œ */

SELECT first_name,E.last_name,E.sex FROM employees E
   WHERE first_name='Hercules' AND last_name LIKE 'B%'

/* Q6.A list showing all employees in the Sales department, including their employee number,
     last name, first name, and department name.*/

SELECT emp_no,last_name,first_name,dept_name FROM FINAL_TB
WHERE dept_name='Sales'


/* Q7.A list showing all employees in the Sales and Development departments, 
     including their employee number, last name, first name, and department name.*/

SELECT emp_no,last_name,first_name,dept_name FROM FINAL_TB 
WHERE dept_name in ('Sales','development')

SELECT emp_no,last_name,first_name,dept_nameS FROM final_table
WHERE dept_nameS in ('Sales','development')

/*Q8. A list showing the frequency count of employee last names, in descending order.
       ( i.e., how many employees share each last name */

SELECT last_name,COUNT(LAST_NAME) AS FREQUENCY
FROM final_table
GROUP BY last_name
ORDER BY FREQUENCY DESC

--Q10.Show the Average salary per title (designation)

SELECT title,AVG(SALARY) AS AVG_SAL FROM final_table
GROUP BY TITLE
ORDER BY AVG_SAL DESC

--Q11.Calculate employee tenure & show the tenure distribution among the employees

select emp_no,DATEDIFF(year,hire_date,ISNULL(last_date,getdate()))as tenure from final_table

------------------------------------------**--------------------------------------------------


-- ** High level metrics **

select count(distinct dept_no)  from departments

select count(distinct title) from final_table

select count(emp_no) from final_table

select count(emp_no) from final_table where [left]=1

select count(distinct Last_performance_rating) from final_table

select count(emp_no) from final_table where no_of_departments>1

select avg(salary) from final_table

select count(distinct emp_no) from final_tb where title='manager'

select dept_no, COUNT(dept_no) from dept_manager group by dept_no having COUNT(dept_no)>1

select dept_name, COUNT(emp_no) as total_emp from FINAL_TB 
group by dept_name order by total_emp desc 

select MAX(salary) as max_sal,min(salary) as min_sal from final_table 

--Average Tenure of the Employee who left

select AVG(tenure) as avg_tenure from(
select emp_no, (DATEDIFF(day,hire_date,last_date))/365.0 as tenure from final_table
where [left]=1) as x

--Average Performance Rating

select case when average_performance_rating>=1 and average_performance_rating<2 then 'PIP'
            when average_performance_rating>=2 and average_performance_rating<3 then 'C'
			when average_performance_rating>=3 and average_performance_rating<4 then 'B'
			when average_performance_rating>=4 and average_performance_rating<5 then 'S'
			else 'A'
			end as avg_ratings from(
select 
    SUM(
        CASE Last_performance_rating
            WHEN 'PIP' THEN 1 * total_emp 
            WHEN 'C' THEN 2 * total_emp 
            WHEN 'B' THEN 3 * total_emp 
            WHEN 'S' THEN 4 * total_emp 
            WHEN 'A' THEN 5 * total_emp 
        END
    ) * 1.00/ SUM(total_emp) AS average_performance_rating from(
select  Last_performance_rating ,COUNT(*) as total_emp from final_table
group by Last_performance_rating) as x) as t

--Average Number of Projects per Employee

select AVG(no_of_projects) avg_projects from final_table

--max and min  tenure

select MAX(tenure) as max_tenure,MIN(tenure) as min_tenure from(
select emp_no,datediff(day,hire_date,isnull(last_date,max(last_date)over()))/365.0 as tenure
from final_table) as x

--Average Age of the Employee who left

select AVG(age) as avg_age,MAX(age) as max_age, MIN(age) as min_age from(
select emp_no,datediff(day,birth_date,last_date)/365.0 as age
from final_table) as x



-----------------------------------------------------**-------------------------------------------------

-- ** Employee analysis **

--1. Distribution of Employees by Gender

select *,total_no*100.00/SUM(total_no)over() as pct from(
select 'Female' as gender,COUNT(*) as total_no from final_table where sex='F' 
union 
select 'Male' as gender,COUNT(*) as total_no from final_table where sex='M' ) as x 

--2. Employee distribution by performance ratings

select *,total_no*100.00/SUM(total_no)over() as pct from(
select LAST_PERFORMANCE_RATING,COUNT(*) as total_no
from final_table  group by LAST_PERFORMANCE_RATING) as x order by total_no desc


--3. Employee Count by Job Title

select title,COUNT(*) as total_emp from final_table group by title order by total_emp desc

--4.Employee with No. of projects

SELECT *,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,COUNT(EMP_NO) AS NO_OF_EMP
FROM final_table
 
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X
ORDER BY
   NO_OF_EMP desc

--5.Existing Employees by age group 

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,DATEDIFF(day,birth_date,MAX(last_date)over())/365.0 AS AGE 
   FROM final_table where [left]=0 ) AS X
GROUP BY  CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y


--6. Employees Hire Trends

SELECT YEAR(hire_date) AS hire_year, COUNT(*) AS employee_count
FROM final_table
GROUP BY YEAR(hire_date)
ORDER BY hire_year

--7. Employee Exit Trends 

SELECT YEAR(last_date) AS exit_year, COUNT(emp_no) AS total_exits
FROM final_table
WHERE last_date IS NOT NULL
GROUP BY YEAR(last_date)
order by  exit_year


 --8. Year wise total employee

select * , isnull(LAG(cum_left_emp_count)over(order by years),0) as new_count ,
(SUM(total_emp_hired)over(order by years) - isnull(LAG(cum_left_emp_count)over( order by years),0))
 as total_emp
 
from(
select *,
SUM(total_emp_hired)over( order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM final_table
    GROUP BY YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM final_table
    WHERE [left] = 1
    GROUP BY  YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr 

) as z) as p
order by years


-------------------------------------------------------------------------------

-- ** Department analysis **

--1.Department wise Employee

select dept_name, COUNT(emp_no) as total_emp from FINAL_TB
group by dept_name order by total_emp desc

--2.Department wise average salary

select  dept_name, AVG(salary) as avg_salary from FINAL_TB
group by dept_name order by avg_salary desc


--3.Department wise no_of manager

select dept_name, COUNT(emp_no) as total_manager from FINAL_TB where title='manager'
group by dept_name order by total_manager desc

--4.Department wise performance analysis

select dept_name,Last_performance_rating,COUNT(distinct emp_no)
from FINAL_TB
group by dept_name,Last_performance_rating
order by dept_name

--5. Year wise employee of each department


select * , isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0) as new_count ,
(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0))
 as total_emp
 
from(
select *,
SUM(total_emp_hired)over(partition by dept_name order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(partition by dept_name order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.dept_name, y.dept_name) AS dept_name,
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
   
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        dept_name,
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM FINAL_TB
    GROUP BY dept_name, YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        dept_name,
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM FINAL_TB
    WHERE [left] = 1
    GROUP BY dept_name, YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr AND x.dept_name = y.dept_name

) as z) as p
order by years,dept_name
-----------------------------------------------------------------------------

-- ** Salary analysis **

--1. Year-wise average salary

select * , isnull(LAG(cum_left_emp_count)over(order by years),0) as new_count ,
(cum_hired_emp_count - isnull(LAG(cum_left_emp_count)over( order by years),0))  as total_emp,
isnull(LAG(cum_hired_salary)over(order by years),0) as new_sal,
(cum_hired_salary - isnull(LAG(cum_left_salary)over( order by years),0))  as total_sal,
(cum_hired_salary - isnull(LAG(cum_left_salary)over( order by years),0))/(cum_hired_emp_count - isnull(LAG(cum_left_emp_count)over( order by years),0)) as avg_sal


 
from(
select *,
SUM(total_emp_hired)over( order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(order by years) as cum_left_emp_count,
SUM(total_salary_hired)over( order by years) as cum_hired_salary,
SUM(total_salary_left)over(order by years) as cum_left_salary

from(
SELECT 
    COALESCE(x.hire_yr, y.last_yr) AS years,
	COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
    COALESCE(y.total_emp_left, 0) AS total_emp_left,
    COALESCE(x.total_salary_hired, 0) AS total_salary_hired,
    COALESCE(y.total_salary_left, 0) AS total_salary_left
FROM (
    SELECT 
        YEAR(hire_date) AS hire_yr,
		COUNT(emp_no) AS total_emp_hired,
        sum(salary) AS total_salary_hired
    FROM final_table
    GROUP BY YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        YEAR(last_date) AS last_yr,
		COUNT(emp_no) AS total_emp_left,
        sum(salary) AS total_salary_left
    FROM final_table
    WHERE [left] = 1
    GROUP BY  YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr 

) as z) as p
order by years

--2. Average Salary by Job Title

select title,avg(salary) as avg_sal from final_table group by title order by avg_sal desc

--3. Average Salary by Last Performance Rating

SELECT last_performance_rating, 
       AVG(salary) AS avg_salary, 
       MIN(salary) AS min_salary, 
       MAX(salary) AS max_salary, 
       COUNT(*) AS employee_count
FROM final_table
GROUP BY last_performance_rating
ORDER BY last_performance_rating

--4.Employees by salary range

SELECT *,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table 
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X
ORDER BY
    salary_range



-------------------------------------------------------------------------


-- ** Attrition **

--1. Employee Attrition Analysis

select *,(no_of_emp*100.00)/SUM(no_of_emp)over() as percntg from(
select 'emp_left' as emp_status,COUNT(*) as no_of_emp from final_table where [left]=1
union
select 'emp_stayed' as emp_status,COUNT(*) as no_of_emp from final_table where [left]=0
) as x

--2. Share of Overall Employee Attrition by Gender

select *,(total_no*100.00)/SUM(total_no)over() as percntg from(
select 'Female' as gender,COUNT(*) as total_no from final_table where sex='F' and [left]=1
union 
select 'Male' as gender,COUNT(*) as total_no from final_table where sex='M'  and [left]=1) as x 

--3. Department-wise share to Overall Employee Attrition

select *,total_no*100.00/SUM(total_no)over() as pct from(
select dept_name,COUNT(*) as total_no
from FINAL_TB where [left]=1 group by dept_name) as x order by total_no desc

--4. Department and gender-wise share to Overall Employee Attrition

select *,total_no*100.00/SUM(total_no)over() as pct from(
select dept_name,sex,COUNT(*) as total_no
from FINAL_TB where [left]=1 group by dept_name,sex) as x order by dept_name

--5. Share of Overall Employee Attrition by Job Title

select *,total_no*100.00/SUM(total_no)over() as pct from(
select title,COUNT(*) as total_no
from final_table where [left]=1 group by title) as x order by total_no desc

--6. Share of Overall Employee Attrition by Job Title and gender

select *,total_no*100.00/SUM(total_no)over() as pct from(
select title,sex,COUNT(*) as total_no
from final_table where [left]=1 group by title,sex) as x order by title

--7. Share of Overall Employee Attrition by Salary Range

SELECT *,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table where [left]=1
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X
ORDER BY
    salary_range


--8. Share of Overall Employee Attrition by Performance Rating

select *,total_no*100.00/SUM(total_no)over() as pct from(
select LAST_PERFORMANCE_RATING,COUNT(*) as total_no
from final_table where [left]=1 group by LAST_PERFORMANCE_RATING) as x order by total_no desc

--9. Attrition by Tenure

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END AS tenure_group,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT 
    emp_no,
    DATEDIFF(day, hire_date,last_date) / 365.0 AS tenure
FROM 
    final_table
WHERE 
    [LEFT] = 1) AS X
GROUP BY  CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END
	) AS Y



	
--10. Share of Overall Employee Attrition by Age Group

SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,DATEDIFF(day,birth_date,last_date)/365.0 AS AGE 
   FROM final_table WHERE [LEFT]=1) AS X
GROUP BY  CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y


--11. Share of Overall Employee Attrition by Number of Projects

SELECT *,NO_OF_EMP*100.00/SUM( NO_OF_EMP )OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,COUNT(EMP_NO) AS NO_OF_EMP 
FROM final_table
 where [left]=1
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X
ORDER BY
   NO_OF_EMP desc

----------------------------------------------------------------------------


 -- ** Attrition rate **

 --1. Year wise attrition rate 


select * , isnull(LAG(cum_left_emp_count)over(order by years),0) as new_count ,
(SUM(total_emp_hired)over(order by years) - isnull(LAG(cum_left_emp_count)over( order by years),0))
 as total_emp,
 total_emp_left*100.00/(SUM(total_emp_hired)over(order by years) - isnull(LAG(cum_left_emp_count)over(order by years),0)) as pct
from(
select *,
SUM(total_emp_hired)over( order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM final_table
    GROUP BY YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM final_table
    WHERE [left] = 1
    GROUP BY  YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr 

) as z) as p
order by years


--2. Year wise attrition rate of each department


select * , isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0) as new_count ,
(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0))
 as total_emp,
 total_emp_left*100.00/(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0)) as pct
from(
select *,
SUM(total_emp_hired)over(partition by dept_name order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(partition by dept_name order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.dept_name, y.dept_name) AS dept_name,
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
   
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        dept_name,
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM FINAL_TB
    GROUP BY dept_name, YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        dept_name,
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM FINAL_TB
    WHERE [left] = 1
    GROUP BY dept_name, YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr AND x.dept_name = y.dept_name

) as z) as p
order by dept_name,years

--3. Department wise attrition rate

select x.dept_name,total_emp_left,total_emp,x.total_emp_left*100.00/total_emp as attrition_rate from 
(select dept_name,COUNT(*) as total_emp_left from final_tb where [left]=1 group by dept_name) as x
join (select dept_name,COUNT(*) as total_emp from final_tb  group by dept_name) as y
on x.dept_name=y.dept_name


--4. Job title wise attrition rate

select x.title,total_emp_left,total_emp,total_emp_left*100.00/total_emp as attrition_rate from 
(select title,COUNT(*) as total_emp_left from final_table where [left]=1 group by title) as x
join (select title,COUNT(*) as total_emp from final_table group by title) as y
on x.title=y.title

--5. Performance rating wise attrition rate

select x.Last_performance_rating,total_emp_left,total_emp,total_emp_left*100.00/total_emp as attrition_rate from 
(select Last_performance_rating,COUNT(*) as total_emp_left from final_table where [left]=1 group by Last_performance_rating) as x
join (select Last_performance_rating,COUNT(*) as total_emp from final_table  group by Last_performance_rating) as y
on x.Last_performance_rating=y.Last_performance_rating

--6. Gender wise attrition rate

select x.Sex,total_emp_left,total_emp,total_emp_left*100.00/total_emp as attrition_rate from 
(select Sex,COUNT(*) as total_emp_left from final_table where [left]=1 group by Sex) as x
join (select Sex,COUNT(*) as total_emp from final_table  group by Sex) as y
on x.Sex=y.Sex

--7. Department and gender wise attrition rate

select x.dept_name,x.sex,total_emp_left,total_emp,total_emp_left*100.00/total_emp as attrition_rate from 
(select dept_name,sex,COUNT(*) as total_emp_left from final_tb where [left]=1 group by dept_name,sex) as x
join (select dept_name,sex,COUNT(*) as total_emp from final_tb  group by dept_name,sex) as y
on x.dept_name=y.dept_name and x.sex=y.sex
order by x.dept_name

--8. Job title and gender wise attrition rate

select y.title,y.sex,isnull(emp_left,0) as total_emp_left,total_emp,isnull(emp_left,0)*100.00/total_emp as attrition_rate from 
(select title,sex,COUNT(*) as emp_left from final_table where [left]=1 group by title,sex) as x
full outer join (select title,sex,COUNT(*) as total_emp from final_table  group by title,sex) as y
on x.title=y.title and x.sex=y.sex
order by y.title


 
 ----------------------------------------------**----------------------------------------------
 ----------------------------------------------**----------------------------------------------
	

	   
-- **For power bi**

----Employee distribution by no. of projects

select * into emp_projects from (
SELECT 'emp_left' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,COUNT(EMP_NO) AS NO_OF_EMP
FROM final_table
 where [left]=1
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X
union
SELECT 'emp_stayed' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
      CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END AS project_category,COUNT(EMP_NO) AS NO_OF_EMP
FROM final_table
 where [left]=0
GROUP BY
    CASE 
        WHEN no_of_projects BETWEEN 1 AND 3 THEN 'Low(1-3)'
        WHEN no_of_projects BETWEEN 4 AND 7 THEN 'Medium(4-7)'
        WHEN no_of_projects BETWEEN 8 AND 10 THEN 'High(8-10)'
        ELSE 'Out of Range'
    END) AS X) as z


	select * from emp_projects

-----------------------------------------------------------------------------------------


-- No of employees by Tenure group

select * into emp_tenure from(
SELECT 'emp_left' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(

SELECT 
CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END AS tenure_group,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT 
    emp_no,
    DATEDIFF(day, hire_date,last_date) / 365.0 AS tenure
FROM 
    final_table
WHERE 
    [LEFT] = 1) AS X
GROUP BY  CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END
	) AS Y

union

SELECT 'emp_stayed' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END AS tenure_group,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT 
    emp_no,
    DATEDIFF(day, hire_date,max(last_date)over()) / 365.0 AS tenure
FROM 
    final_table
WHERE 
    [LEFT] = 0) AS p
GROUP BY  CASE 
        WHEN tenure>=1 AND tenure<=4 THEN 'Low Tenure(>=1 to <=4)'
        WHEN tenure>4 AND tenure<=8  THEN 'Medium Tenure(>4 to <=8)'
        ELSE 'High Tenure(>8 to <=14)'
    END
	) AS q) as t



--------------------------------------------------------------------------------

--No of Employees by salary range

select * into emp_salary from (
SELECT 'emp_left' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table 
	where [left]=1
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X

union

SELECT 'emp_stayed' as emp_status,*,NO_OF_EMP*100.00/SUM(NO_OF_EMP)OVER() AS PCT FROM(

SELECT
    CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END AS salary_range,
COUNT(EMP_NO) AS NO_OF_EMP
FROM
    final_table 
	where [left]=0
GROUP BY
        CASE
        WHEN salary BETWEEN 40000 AND 60000 THEN '40k-60k'
        WHEN salary BETWEEN 60001 AND 80000 THEN '60k-80k'
        WHEN salary BETWEEN 80001 AND 100000 THEN '80k-100k'
        WHEN salary BETWEEN 100001 AND 129492 THEN '100k-130k'
        ELSE 'Unknown'
    END ) AS X
	) as z

select * from emp_salary

------------------------------------------------------------------------


-- Year wise employee of each department

select * into dept_empcount from(
select * , isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0) as new_count ,
(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0))
 as total_emp
 
from(
select *,
SUM(total_emp_hired)over(partition by dept_name order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(partition by dept_name order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.dept_name, y.dept_name) AS dept_name,
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
   
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        dept_name,
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM FINAL_TB
    GROUP BY dept_name, YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        dept_name,
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM FINAL_TB
    WHERE [left] = 1
    GROUP BY dept_name, YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr AND x.dept_name = y.dept_name

) as z) as p) as t
order by dept_name,years

------------------------------------------------------------------------------------

 -- Year wise average salary of each department

select * into dept_avgsal_yearwise from (
select * , isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0) as new_count ,
(cum_hired_emp_count - isnull(LAG(cum_left_emp_count)over(partition by dept_name  order by years),0))  as total_emp,
isnull(LAG(cum_hired_salary)over(partition by dept_name order by years),0) as new_sal,
(cum_hired_salary - isnull(LAG(cum_left_salary)over(partition by dept_name  order by years),0))  as total_sal,
(cum_hired_salary - isnull(LAG(cum_left_salary)over(partition by dept_name  order by years),0))/(cum_hired_emp_count - isnull(LAG(cum_left_emp_count)over(partition by dept_name  order by years),0)) as avg_sal


 
from(
select *,
SUM(total_emp_hired)over(partition by dept_name order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(partition by dept_name order by years) as cum_left_emp_count,
SUM(total_salary_hired)over(partition by dept_name  order by years) as cum_hired_salary,
SUM(total_salary_left)over(partition by dept_name order by years) as cum_left_salary

from(
SELECT
    COALESCE(x.dept_name, y.dept_name) AS dept_name,
    COALESCE(x.hire_yr, y.last_yr) AS years,
	COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
    COALESCE(y.total_emp_left, 0) AS total_emp_left,
    COALESCE(x.total_salary_hired, 0) AS total_salary_hired,
    COALESCE(y.total_salary_left, 0) AS total_salary_left
FROM (
    SELECT 
	    dept_name,
        YEAR(hire_date) AS hire_yr,
		COUNT(emp_no) AS total_emp_hired,
        sum(salary) AS total_salary_hired
    FROM FINAL_TB
    GROUP BY dept_name,YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
	    dept_name,
        YEAR(last_date) AS last_yr,
		COUNT(emp_no) AS total_emp_left,
        sum(salary) AS total_salary_left
    FROM FINAL_TB
    WHERE [left] = 1
    GROUP BY  dept_name,YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr and x.dept_name=y.dept_name

) as z) as p) as t
order by years


----------------------------------------------------------------------------------

 -- Overall Year wise attrition rate 

 select * into year_attrition from (
select * , isnull(LAG(cum_left_emp_count)over(order by years),0) as new_count ,
(SUM(total_emp_hired)over(order by years) - isnull(LAG(cum_left_emp_count)over( order by years),0))
 as total_emp,
 total_emp_left*100.00/(SUM(total_emp_hired)over(order by years) - isnull(LAG(cum_left_emp_count)over(order by years),0)) as pct
from(
select *,
SUM(total_emp_hired)over( order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM final_table
    GROUP BY YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM final_table
    WHERE [left] = 1
    GROUP BY  YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr 

) as z) as p) as t
order by years

-------------------------------------------------------------------------------



-- Year wise attrition rate of each department

select * into year_dept_attrition from(
select * , isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0) as new_count ,
(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0))
 as total_emp,
 total_emp_left*100.00/(SUM(total_emp_hired)over(partition by dept_name order by years) - isnull(LAG(cum_left_emp_count)over(partition by dept_name order by years),0)) as pct
from(
select *,
SUM(total_emp_hired)over(partition by dept_name order by years) as cum_hired_emp_count,
SUM(total_emp_left)over(partition by dept_name order by years) as cum_left_emp_count

from(
SELECT 
    COALESCE(x.dept_name, y.dept_name) AS dept_name,
    COALESCE(x.hire_yr, y.last_yr) AS years,
    COALESCE(x.total_emp_hired, 0) AS total_emp_hired,
   
    COALESCE(y.total_emp_left, 0) AS total_emp_left
FROM (
    SELECT 
        dept_name,
        YEAR(hire_date) AS hire_yr,
        COUNT(emp_no) AS total_emp_hired
    FROM FINAL_TB
    GROUP BY dept_name, YEAR(hire_date)
) AS x
FULL OUTER JOIN (
    SELECT 
        dept_name,
        YEAR(last_date) AS last_yr,
        COUNT(emp_no) AS total_emp_left
    FROM FINAL_TB
    WHERE [left] = 1
    GROUP BY dept_name, YEAR(last_date)
) AS y
ON x.hire_yr = y.last_yr AND x.dept_name = y.dept_name

) as z) as p) as t
order by dept_name,years



-------------------------------------------------------------------------

--Share of department-wise Employee Attrition by Age Group

select * into dept_agegroup_attrition from(
SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT dept_name,
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,dept_name,DATEDIFF(day,birth_date,last_date)/365.0 AS AGE 
   FROM FINAL_TB WHERE [LEFT]=1) AS X
GROUP BY dept_name, CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y) as t

------------------------------------------------------------------------------------

-- Share of Overall Employee Attrition by Age Group

select * into agegroup_attrition from(
SELECT *,(NO_OF_EMP*100.00)/SUM(NO_OF_EMP)OVER() AS PCT FROM(
SELECT 
CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END AS age_group
,COUNT(EMP_NO) AS NO_OF_EMP FROM(
SELECT EMP_NO,DATEDIFF(day,birth_date,last_date)/365.0 AS AGE 
   FROM final_table WHERE [LEFT]=1) AS X
GROUP BY  CASE 
    WHEN age>=21 and AGE<=30 THEN '21-30'
    WHEN age>30 and AGE<=40  THEN '31-40'
    WHEN age>40 and AGE<=50  THEN '41-50'
    WHEN age>50 and AGE<=60  THEN '51-60'
    ELSE '>60'
END

	) AS Y) as t




-------------------------------------------------**----------------------------------------------




---extra analysis


--Average Performance Rating by Department

select dept_name, 
    SUM(
        CASE Last_performance_rating
            WHEN 'PIP' THEN 1 * total_emp 
            WHEN 'C' THEN 2 * total_emp 
            WHEN 'B' THEN 3 * total_emp 
            WHEN 'S' THEN 4 * total_emp 
            WHEN 'A' THEN 5 * total_emp 
        END
    ) * 1.00/ SUM(total_emp)AS average_performance_rating from(
select  dept_name,Last_performance_rating ,COUNT(*) as total_emp from FINAL_TB
group by dept_name,Last_performance_rating
--order by dept_name 
)as x
group by dept_name


--Average Performance Rating by Title

select title, 
    SUM(
        CASE Last_performance_rating
            WHEN 'PIP' THEN 1 * total_emp 
            WHEN 'C' THEN 2 * total_emp 
            WHEN 'B' THEN 3 * total_emp 
            WHEN 'S' THEN 4 * total_emp 
            WHEN 'A' THEN 5 * total_emp 
        END
    ) * 1.00/ SUM(total_emp)AS average_performance_rating from(
select  title,Last_performance_rating ,COUNT(*) as total_emp from FINAL_TB
group by title,Last_performance_rating
--order by title
)as x
group by title	   	  




--------------------------------------------------------------------------------

